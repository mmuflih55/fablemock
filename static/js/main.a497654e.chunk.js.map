{"version":3,"sources":["Reducer.js","Context.js","components/SearchHeader.js","components/ItemCard.js","components/ProductList.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","search","val","furnitureStyles","deliveryDays","initState","Reducer","useReducer","dispatch","ProductsContext","createContext","Header","furnitureStyle","con","useContext","classes","makeStyles","theme","backgroundColor","marginBottom","title","color","textAlign","checkboxContainer","display","alignItems","justifyContent","width","fstylesInput","paddingLeft","daysCount","container","padding","useStyles","GreenCheckBox","withStyles","root","checked","props","Checkbox","SerchTextField","borderBottomColor","borderColor","TextField","className","Container","Grid","spacing","item","xs","md","searchInput","onKeyDown","e","keyCode","target","value","placeholder","Autocomplete","multiple","onChange","v","options","renderOption","option","selected","checkbox","renderInput","params","Select","MenuItem","ItemCard","data","flexDirection","cardTitle","fontWeight","cardHeader","deliveryTime","textDecoration","fontSize","description","fscontainer","dtcontainer","price","Card","Typography","gutterBottom","name","toLocaleString","component","length","substr","furniture_style","map","fs","i","key","delivery_time","ProductList","products","filteredData","filter","product","toLowerCase","includes","fd","check","CekFilteredData","time","parseInt","App","useState","furniture_styles","setState","useEffect","a","fetch","response","json","fetchData","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a497654e.chunk.js","sourcesContent":["import { useReducer } from \"react\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SetSearch\": {\n      return { ...state, search: action.val };\n    }\n    case \"SetFurnitureStyles\": {\n      return { ...state, furnitureStyles: action.val };\n    }\n    case \"SetDeliveryDays\": {\n      return { ...state, deliveryDays: action.val };\n    }\n    default:\n      return state;\n  }\n};\n\nconst initState = {\n  search: \"\",\n  furnitureStyles: [],\n  deliveryDays: 0\n};\n\nconst Reducer = () => {\n  const [state, dispatch] = useReducer(reducer, initState);\n  return { state, dispatch };\n};\n\nexport default Reducer;\n","import { createContext } from \"react\";\n\nexport const ProductsContext = createContext();\n","import React, { useContext } from \"react\";\nimport {\n  Container,\n  Select,\n  MenuItem,\n  TextField,\n  Checkbox\n} from \"@material-ui/core\";\nimport { ProductsContext } from \"./../Context\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Header = ({ furnitureStyle }) => {\n  const con = useContext(ProductsContext);\n  const useStyles = makeStyles({\n    theme: {\n      backgroundColor: \"#106DC8\",\n      marginBottom: 12\n    },\n    title: {\n      color: \"#fff\",\n      textAlign: \"left\"\n    },\n    checkboxContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      width: \"100%\"\n    },\n    fstylesInput: {\n      backgroundColor: \"#fff\",\n      paddingLeft: 5\n    },\n    daysCount: {\n      textAlign: \"left\",\n      paddingLeft: 5,\n      backgroundColor: \"#fff\",\n      width: \"100%\"\n    },\n    container: {\n      padding: \"16px 0\"\n    }\n  });\n  const classes = useStyles();\n\n  const GreenCheckBox = withStyles({\n    root: {\n      \"&$checked\": {\n        color: \"green\"\n      }\n    },\n    checked: {}\n  })(props => <Checkbox color=\"default\" {...props} />);\n\n  const SerchTextField = withStyles({\n    root: {\n      width: \"100%\",\n      color: \"#fff\",\n      \"& .MuiInput-input\": {\n        color: \"#fff\"\n      },\n      \"& .MuiInput-underline\": {\n        borderBottomColor: \"#fff\"\n      },\n      \"& .MuiInput-underline:after\": {\n        borderBottomColor: \"#fff\"\n      },\n      \"&:hover .MuiInput-underline:before\": {\n        borderBottomColor: \"#fff\"\n      },\n      \"& .MuiInput-underline:before\": {\n        borderBottomColor: \"#fff\"\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: \"#fff\"\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#fff\"\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"#fff\"\n        }\n      }\n    }\n  })(TextField);\n\n  const handleSearchChange = e => {\n    if (e.keyCode === \"13\") {\n      con.dispatch({ type: \"SetSearch\", val: e.target.value });\n    }\n  };\n  const handleDaysCountChange = e => {\n    con.dispatch({ type: \"SetDeliveryDays\", val: e.target.value });\n  };\n  const handleFurnitureStyleChange = (e, v) => {\n    con.dispatch({ type: \"SetFurnitureStyles\", val: v });\n  };\n\n  return (\n    <div className={classes.theme}>\n      <Container>\n        <Grid container className={classes.title} spacing={3}>\n          <Grid item xs={12} md={6}>\n            <SerchTextField\n              className={classes.searchInput}\n              //   value={state}\n              onKeyDown={handleSearchChange}\n              placeholder=\"Search Furniture, Press Enter to Search\"\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Autocomplete\n              multiple\n              onChange={handleFurnitureStyleChange}\n              options={furnitureStyle}\n              className={classes.fstylesInput}\n              renderOption={(option, { selected }) => (\n                <div className={classes.checkboxContainer}>\n                  <div>{option}</div>\n                  <GreenCheckBox\n                    checked={selected}\n                    className={classes.checkbox}\n                  />\n                </div>\n              )}\n              renderInput={params => (\n                <TextField {...params} placeholder=\"Furniture Style\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Select\n              className={classes.daysCount}\n              value={con.state.deliveryDays}\n              onChange={handleDaysCountChange}\n            >\n              <MenuItem value=\"0\">Delivery Time</MenuItem>\n              <MenuItem value=\"7\">1 Weeks</MenuItem>\n              <MenuItem value=\"14\">2 Weeks</MenuItem>\n              <MenuItem value=\"30\">1 Month</MenuItem>\n              <MenuItem value=\"more\">More...</MenuItem>\n            </Select>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, Typography } from \"@material-ui/core\";\n\nconst ItemCard = ({ data }) => {\n  const useStyles = makeStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      padding: 16\n    },\n    cardTitle: {\n      fontWeight: \"bold\"\n    },\n    cardHeader: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    deliveryTime: {\n      color: \"blue\",\n      textDecoration: \"underline\",\n      fontWeight: \"bold\"\n    },\n    title: {\n      fontSize: 14\n    },\n    description: {\n      textAlign: \"left\"\n    },\n    fscontainer: {\n      color: \"#106DC8\",\n      display: \"flex\"\n    },\n    dtcontainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    price: {\n      color: \"orange\",\n      fontWeight: \"bold\"\n    }\n  });\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <Card className={classes.root}>\n        <div className={classes.cardHeader}>\n          <Typography className={classes.cardTitle} gutterBottom>\n            {data.name}\n          </Typography>\n          <Typography className={classes.price}>\n            Rp {data.price.toLocaleString(\"id\")}\n          </Typography>\n        </div>\n        <Typography component=\"p\" className={classes.description}>\n          {data.description.length > 114\n            ? data.description.substr(114) + \"...\"\n            : data.description}\n        </Typography>\n        <div className={classes.fscontainer}>\n          {data.furniture_style.map((fs, i) => (\n            <Typography key={i} component=\"span\">\n              {i < data.furniture_style.length - 1 ? fs + \", \" : fs}\n            </Typography>\n          ))}\n        </div>\n\n        <div className={classes.dtcontainer}>\n          <Typography component=\"a\" className={classes.deliveryTime}>\n            Delivery Days: {data.delivery_time}\n          </Typography>\n        </div>\n      </Card>\n    </Card>\n  );\n};\n\nexport default ItemCard;\n","import React, { useContext } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport ItemCard from \"./ItemCard\";\nimport { ProductsContext } from \"./../Context\";\n\nconst ProductList = ({ products }) => {\n  const con = useContext(ProductsContext);\n  const CekDays = time => {\n    if (con.state.deliveryDays === 0) {\n      return 1;\n    } else if (con.state.deliveryDays === \"more\") {\n      return time > 30 ? 1 : 0;\n    } else {\n      return parseInt(time) <= con.state.deliveryDays ? 1 : 0;\n    }\n  };\n  const CekFilteredData = fd => {\n    if (con.state.furnitureStyles.length === 0) {\n      return 1;\n    } else {\n      let check = false;\n      for (let i = 0; i < con.state.furnitureStyles.length; i++) {\n        check = fd.includes(con.state.furnitureStyles[i]);\n        if (check === true) break;\n      }\n      return check;\n    }\n  };\n\n  const filteredData = products.filter(\n    product =>\n      product.name.toLowerCase().includes(con.state.search.toLowerCase()) &&\n      CekFilteredData(product.furniture_style) &&\n      CekDays(product.delivery_time)\n  );\n  return (\n    <div>\n      <Container>\n        <Grid container spacing={3}>\n          {products.length > 0 &&\n            filteredData.map((product, i) => (\n              <Grid item xs={12} md={6} key={i}>\n                <ItemCard data={product} />\n              </Grid>\n            ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default ProductList;\n","import React, { useEffect, useState } from \"react\";\nimport Reducer from \"./Reducer\";\nimport Header from \"./components/SearchHeader\";\nimport ProductList from \"./components/ProductList\";\nimport { ProductsContext } from \"./Context\";\nconst App = () => {\n  const [data, setState] = useState({ furniture_styles: [], products: [] });\n  const { state, dispatch } = Reducer();\n\n  useEffect(() => {\n    async function fetchData() {\n      //get the products and furniture styles\n      const response = await fetch(\n        \"https://www.mocky.io/v2/5c9105cb330000112b649af8\"\n      );\n      const data = await response.json();\n      setState(data);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <ProductsContext.Provider value={{ state, dispatch }}>\n      <Header furnitureStyle={data.furniture_styles} />\n      <ProductList products={data.products} />\n    </ProductsContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}